{"version":3,"sources":["components/HomePage.tsx","components/NotFoundPage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","NotFoundPage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","slug","useParams","classNames","to","sex","name","born","died","mother","motherName","father","fatherName","PeopleTable","people","map","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","useEffect","peopleFromServer","tempPerson","find","preparedPeople","catch","error","console","warn","isDisplayErrorMessage","isNoPeopleOnServer","length","isPeopleOnServer","getLinkClass","isActive","App","role","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.316d1dcf.chunk.js","sourcesContent":["export const HomePage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person,\n};\n\nconst FEMALE = 'f';\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { slug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames(\n        { 'has-background-warning': person.slug === slug },\n      )}\n    >\n      <td>\n        <Link\n          to={`${person.slug}`}\n          className={classNames(\n            { 'has-text-danger': person.sex === FEMALE },\n          )}\n        >\n          {person.name}\n        </Link>\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {person.mother\n          ? (\n            <Link\n              to={`${person.mother.slug}`}\n              className=\"has-text-danger\"\n            >\n              {person.mother.name}\n            </Link>\n          ) : (\n            person.motherName\n          )}\n\n      </td>\n      <td>\n        {person.father\n          ? (\n            <Link\n              to={`${person.father.slug}`}\n            >\n              {person.father.name}\n            </Link>\n          ) : (\n            person.fatherName\n          )}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonLink\n            person={person}\n            key={person.slug}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Loader } from './Loader';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { PeopleTable } from './PeopleTable';\n\nconst preparedPeople = (peopleFromServer: Person[]) => {\n  return peopleFromServer\n    .map(person => {\n      const tempPerson = person;\n\n      tempPerson.motherName = person.motherName || '-';\n      tempPerson.fatherName = person.fatherName || '-';\n      tempPerson.mother = peopleFromServer\n        .find(mother => mother.name === person.motherName);\n      tempPerson.father = peopleFromServer\n        .find(father => father.name === person.fatherName);\n\n      return tempPerson;\n    });\n};\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then(peopleFromServer => {\n        setPeople(preparedPeople(peopleFromServer));\n        setIsLoading(false);\n      })\n      .catch(error => {\n        // eslint-disable-next-line no-console\n        console.warn(error);\n        setIsLoading(false);\n        setIsError(true);\n      });\n  }, []);\n\n  const isDisplayErrorMessage = isError && !isLoading;\n  const isNoPeopleOnServer = !people.length && !isLoading && !isError;\n  const isPeopleOnServer = !!people.length && !isError;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isDisplayErrorMessage && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {isNoPeopleOnServer && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {isPeopleOnServer && (\n            <PeopleTable people={people} />\n          )}\n\n        </div>\n      </div>\n    </>\n\n  );\n};\n","import './App.scss';\nimport {\n  NavLink,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport classNames from 'classnames';\nimport { HomePage } from './components/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PeoplePage } from './components/PeoplePage';\n\nconst getLinkClass = ({ isActive } : { isActive: boolean }) => classNames(\n  'navbar-item',\n  { 'has-background-grey-lighter': isActive },\n);\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={getLinkClass}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={getLinkClass}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\" element={<PeoplePage />}>\n            <Route path=\":slug?\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}