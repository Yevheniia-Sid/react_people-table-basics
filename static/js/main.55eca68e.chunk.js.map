{"version":3,"sources":["components/HomePage.tsx","components/NotFoundPage.tsx","components/Loader/Loader.tsx","api.ts","utils/variables.ts","components/PersonLink.tsx","components/PersonItem.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","utils/getPreparedPeople.ts","components/Navigation.tsx","App.tsx","index.tsx"],"names":["HomePage","className","NotFoundPage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","COLUMN_NAMES","PersonLink","person","to","slug","classNames","sex","name","PersonItem","born","died","mother","motherName","father","fatherName","useParams","PeopleTable","people","map","column","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","useEffect","peopleFromServer","tempPerson","find","getPreparedPeople","catch","finally","isDisplayErrorMessage","isNoPeopleOnServer","length","isPeopleOnServer","getLinkClass","isActive","Navigation","role","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.55eca68e.chunk.js","sourcesContent":["export const HomePage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","export const FEMALE = 'f';\nexport const NOT_SET_VALUE = '-';\nexport const COLUMN_NAMES = ['Name', 'Sex', 'Born', 'Died', 'Mother', 'Father'];\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\nimport { FEMALE } from '../utils/variables';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`${person.slug}`}\n      className={classNames(\n        { 'has-text-danger': person.sex === FEMALE },\n      )}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonItem: React.FC<Props> = ({ person }) => {\n  const {\n    sex,\n    born,\n    died,\n    mother,\n    motherName,\n    father,\n    fatherName,\n  } = person;\n\n  const { slug = '' } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames(\n        { 'has-background-warning': person.slug === slug },\n      )}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother\n          ? <PersonLink person={mother} />\n          : motherName}\n      </td>\n      <td>\n        {father\n          ? <PersonLink person={father} />\n          : fatherName}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Person } from '../types';\nimport { PersonItem } from './PersonItem';\nimport { COLUMN_NAMES } from '../utils/variables';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {COLUMN_NAMES.map(column => (\n            <th key={column}>{column}</th>\n          ))}\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonItem\n            person={person}\n            key={person.slug}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Loader } from './Loader';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { PeopleTable } from './PeopleTable';\nimport { getPreparedPeople } from '../utils/getPreparedPeople';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then(peopleFromServer => {\n        setPeople(getPreparedPeople(peopleFromServer));\n      })\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const isDisplayErrorMessage = isError && !isLoading;\n  const isNoPeopleOnServer = !people.length && !isLoading && !isError;\n  const isPeopleOnServer = !!people.length && !isError;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isDisplayErrorMessage && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {isNoPeopleOnServer && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {isPeopleOnServer && (\n            <PeopleTable people={people} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Person } from '../types';\nimport { NOT_SET_VALUE } from './variables';\n\nexport const getPreparedPeople = (peopleFromServer: Person[]) => {\n  return peopleFromServer\n    .map(person => {\n      const tempPerson = person;\n\n      tempPerson.motherName = person.motherName || NOT_SET_VALUE;\n      tempPerson.fatherName = person.fatherName || NOT_SET_VALUE;\n      tempPerson.mother = peopleFromServer\n        .find(mother => mother.name === person.motherName);\n      tempPerson.father = peopleFromServer\n        .find(father => father.name === person.fatherName);\n\n      return tempPerson;\n    });\n};\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nconst getLinkClass = ({ isActive } : { isActive: boolean }) => classNames(\n  'navbar-item',\n  { 'has-background-grey-lighter': isActive },\n);\n\nexport const Navigation: React.FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={getLinkClass}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={getLinkClass}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './App.scss';\nimport {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { HomePage } from './components/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { Navigation } from './components/Navigation';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\" element={<PeoplePage />}>\n            <Route path=\":slug?\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}